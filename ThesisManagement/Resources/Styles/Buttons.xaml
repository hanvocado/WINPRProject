<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--LoginView buttons-->
    <Style x:Key="windowBtnStyle" TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="#0B60B0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="googleBtn" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="DarkRed" />
        <Setter Property="Margin" Value="0 10 0 0" />
        <Setter Property="Padding" Value="0 10 0 5" />

        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="#D73D32" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Sidebar button-->
    <Style x:Key = "sidebarButton" TargetType = "RadioButton" >
        <!--Normal button style-->
        <Setter Property = "Height" Value = "50" />
        <Setter Property = "Margin" Value = "-5,0,0,5" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "Foreground" Value = "{StaticResource plainTextColor}" />
        <Setter Property = "BorderBrush" Value = "Transparent" />
        <Setter Property = "Template" >
            <Setter.Value >
                <ControlTemplate TargetType = "RadioButton" >
                    <Border Background = "{TemplateBinding Background}" 
                            BorderThickness = "4,0,0,0"
                            BorderBrush = "{TemplateBinding BorderBrush}" >
                        <ContentPresenter HorizontalAlignment = "Left" VerticalAlignment = "Center" />
                    </Border> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property = "IsMouseOver" Value = "True" >
                <Setter Property = "Margin" Value = "0,0,0,5" />
                <Setter Property = "Background" Value = "{StaticResource panelOverColor}" />
                <Setter Property = "Foreground" Value = "{StaticResource titleColor2}" />
                <Setter Property = "BorderBrush" Value = "{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--Activated button style-->
            <Trigger Property = "IsChecked" Value = "True" >
                <Setter Property = "Margin" Value = "0,0,0,5" />
                <Setter Property = "Background" Value = "{StaticResource panelActiveColor}" />
                <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter Property = "BorderBrush" Value = "{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Sidebar button icon-->
    <Style x:Key = "sidebarButtonIcon" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property = "Width" Value = "30" />
        <Setter Property = "Height" Value = "30" />
        <Setter Property = "Margin" Value = "35,0,20,0" />
    </Style>

    <!--Sidebar button text-->
    <Style x:Key = "sidebarButtonText" TargetType = "TextBlock" >
        <Setter Property = "Foreground" Value = "{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property = "FontFamily" Value = "Montserrat" />
        <Setter Property = "FontWeight" Value = "Medium" />
        <Setter Property = "FontSize" Value = "20" />
        <Setter Property = "VerticalAlignment" Value = "Center" />
    </Style >

    <!--Control bar button-->
    <Style x:Key = "controlButton" TargetType = "Button" >
        <!--Normal button style-->
        <Setter Property = "Width" Value = "35" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "Foreground" Value = "{StaticResource plainTextColor}" />
        <Setter Property = "BorderBrush" Value = "Transparent" />
        <Setter Property = "Template" >
            <Setter.Value >
                <ControlTemplate TargetType = "Button" >
                    <Border Background = "{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment = "Center" VerticalAlignment = "Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property = "IsMouseOver" Value = "True" >
                <Setter Property = "Background" Value = "{StaticResource panelActiveColor}" />
                <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Sidebar button icon-->
    <Style x:Key = "controlButtonIcon" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property = "Width" Value = "12" />
        <Setter Property = "Height" Value = "12" />
    </Style>

    <!--Icon user button-->
    <Style x:Key = "iconButton" TargetType = "Button" >
        <!--Normal button style-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property = "Width" Value = "25" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "Foreground" Value = "{StaticResource plainTextColor}" />
        <Setter Property = "Template" >
            <Setter.Value >
                <ControlTemplate TargetType = "Button" >
                    <Border Background = "{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment = "Center" VerticalAlignment = "Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property = "IsMouseOver" Value = "True" >
                <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Icon user button icon-->
    <Style x:Key = "iconButtonIcon" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property = "Width" Value = "16" />
        <Setter Property = "Height" Value = "16" />
    </Style>
    
    <!--CRUDS Button-->
    <Style x:Key="btnCruds" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="30"
                            CornerRadius="15"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key = "iconCruds" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property = "Width" Value = "14" />
        <Setter Property = "Height" Value = "14" />
    </Style>

    <!--Status Button-->
    <Style x:Key="btnStatus" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="30"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Status button icon-->
    <Style x:Key = "statusButtonIcon" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "White" />
        <Setter Property = "Width" Value = "14" />
        <Setter Property = "Height" Value = "14" />
    </Style>
    
    <!--Status button text-->
    <Style x:Key = "statusButtonText" TargetType = "TextBlock" >
        <Setter Property = "Foreground" Value = "White" />
        <Setter Property = "FontFamily" Value = "Montserrat" />
        <Setter Property = "FontWeight" Value = "Medium" />
        <Setter Property = "FontSize" Value = "14" />
        <Setter Property = "Margin" Value = "3" />
        <Setter Property = "VerticalAlignment" Value = "Center" />
    </Style >

</ResourceDictionary>