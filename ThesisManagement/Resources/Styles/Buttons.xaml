<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:customControls="clr-namespace:ThesisManagement.CustomControls">

    <Style x:Key="windowBtnStyle" TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="#0B60B0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type customControls:ControlButton}">
        <Setter Property="Background" Value="{Binding DefaultColor, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ControlButton}">
                    <Border Height="30"
                            CornerRadius="8"
                            Padding="5 2"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding HoverColor, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="lvBtn" TargetType="{x:Type customControls:ControlButton}">
        <Setter Property="Background" Value="{Binding DefaultColor, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ControlButton}">
                    <Border Height="22"
                            Width="22"
                            CornerRadius="15"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding HoverColor, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key = "btnIcon" TargetType = "fa:IconImage" >
        <Setter Property = "Foreground" Value = "{StaticResource plainTextColor}" />
        <Setter Property = "Width" Value = "10" />
        <Setter Property = "Height" Value = "10" />
    </Style>

    <Style x:Key="toggleBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="15"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="navBtn" TargetType="RadioButton">
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#f7f3ee" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border" Height="50" BorderThickness="0" Background="Transparent">
                        <Grid>
                            <Border x:Name="activeSign" Height="30" Width="4" HorizontalAlignment="Left"
                                    Background="White" Visibility="Collapsed" />
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="activeSign" Value="Visible" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="activeSign" Value="Visible" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="navIcon" TargetType="fa:IconImage" >
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Margin" Value="18 0 0 0" />
    </Style>

    <Style x:Key="navText" TargetType="TextBlock" >
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="tabText" TargetType="TextBlock" >
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Width" Value="120" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="windowControlIcon" TargetType = "fa:IconImage" >
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
    </Style>

    <Style x:Key="windowControlBtn" TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="Button" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="{StaticResource primaryBrush}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>